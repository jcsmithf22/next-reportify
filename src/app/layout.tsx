import type { Metadata, Viewport } from "next";
import { Red_Hat_Text, Red_Hat_Mono, Red_Hat_Display } from "next/font/google";
import { Flex, Theme, ThemePanel } from "@radix-ui/themes";
import "normalize.css";
import "@radix-ui/themes/styles.css";
import "./globals.css";
import React from "react";
import { NavigationBar } from "@/components/NavigationBar/NavigationBar";
import { clsx } from "clsx";
import { SideBar } from "@/components/SideBar/SideBar";
import { cookies } from "next/headers";
import { ThemeProvider } from "next-themes";

const mainFont = Red_Hat_Text({
  subsets: ["latin"],
  variable: "--font-main",
});

const displayFont = Red_Hat_Display({
  subsets: ["latin"],
  variable: "--font-display",
});

const monoFont = Red_Hat_Mono({
  subsets: ["latin"],
  variable: "--font-main-mono",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const viewport: Viewport = {
  themeColor: "#ffffff",
};

type Theme = "light" | "dark";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const theme = (cookies().get("theme") ?? "light") as Theme;

  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              try {
                if (localStorage.theme === 'dark' || ((!('theme' in localStorage) || localStorage.theme === 'system') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                  document.querySelector('meta[name="theme-color"]').setAttribute('content', 'color(display-p3 0.067 0.067 0.074)')
                }
              } catch (_) {}
            `,
          }}
        />
      </head>
      <body
        className={clsx(
          mainFont.variable,
          monoFont.variable,
          displayFont.variable,
        )}
      >
        <ThemeProvider attribute="class">
          <Theme
            accentColor="jade"
            grayColor="slate"
            radius="large"
            // appearance="dark"
            // hasBackground={false}
          >
            <NavigationBar />
            <SideBar />
            {children}
          </Theme>
        </ThemeProvider>
      </body>
    </html>
  );
}
